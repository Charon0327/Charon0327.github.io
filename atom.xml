<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Charon0327.github.io</id>
    <title>Gridea</title>
    <updated>2021-01-25T15:11:18.841Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Charon0327.github.io"/>
    <link rel="self" href="https://Charon0327.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://Charon0327.github.io/images/avatar.png</logo>
    <icon>https://Charon0327.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[CSS基础]]></title>
        <id>https://Charon0327.github.io/post/css-ji-chu/</id>
        <link href="https://Charon0327.github.io/post/css-ji-chu/">
        </link>
        <updated>2021-01-25T11:10:12.000Z</updated>
        <content type="html"><![CDATA[<p>外部导入：@import（不推荐）<br>
外部样式表：<br>
&lt; head&gt;&lt; link css/demo.css&gt;&lt; /head&gt;<br>
内部样式表：<br>
&lt; head&gt;&lt; style&gt;css样式&lt; /style&gt;&lt; /head&gt;<br>
内联样式表：<br>
&lt; div style=&quot;background-color:red&quot;&gt;&lt; /div&gt;<br>
CSS由两个主要的部分构成：选择器，以及一条或多条声明<br>
每条声明由一个属性和一个值组成<br>
<strong>优先级</strong><br>
!important&gt;行内&gt;id&gt;类选择器&gt;标签选择器<br>
<strong>常用选择器种类</strong><br>
id选择器<br>
类选择器<br>
标签选择器<br>
后代选择器<br>
子元素选择器<br>
分组选择器<br>
相邻兄弟选择器<br>
伪类<br>
伪元素<br>
通用选择器<br>
<strong>CSS文本属性</strong><br>
CSS文本属性课定义文本的外观，通过文本属性，可以改变文本的颜色、字符间距，对齐文本，装饰文本，对文本进行缩进等。<br>
<strong>文本颜色color：</strong><br>
设置文本颜色<br>
color_name规定颜色值为颜色名称的颜色（如red）<br>
hex_number 规定颜色值为十六进制的颜色<br>
rgb_number规定颜色值为rgb的颜色（如rgb(255,0,0））<br>
<strong>行间距line-height</strong><br>
设置行间距离<br>
不允许使用负值<br>
单行文字可实现元素的垂直居中<br>
默认继承父元素line-height</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML基础-表单/表格]]></title>
        <id>https://Charon0327.github.io/post/html-ji-chu-biao-dan-biao-ge/</id>
        <link href="https://Charon0327.github.io/post/html-ji-chu-biao-dan-biao-ge/">
        </link>
        <updated>2021-01-25T06:56:33.000Z</updated>
        <content type="html"><![CDATA[<p><strong>表单</strong><br>
用于搜集不同类型的用户数据<br>
表单就是一个包含表单元素的区域&lt; form&gt;表单元素N个&lt;/ form &gt;<br>
表单元素是允许用户在表单中（比如文本域，下拉列表，单选框，复选框等）<br>
输入信息的元素，以及文本标签<br>
表单使用表单标签定义&lt; from&gt;<br>
<strong>表单标签</strong><br>
&lt; form&gt;&lt; /form&gt;表单的最外层包裹元素（非必须）<br>
常用属性<br>
action=&quot;url&quot;规定表单发送数据的路径<br>
autocomplete=on/off 是否应该启用自动完成功能<br>
method=post/get 属性规定如何发送表单数据（表单数据发送到action属性所规定的页面）<br>
target=&quot;_blank&quot;属性规定在何处打开action URL<br>
<strong>input标签</strong><br>
&lt; input&gt;标签用于搜索用户信息。根据不同的type属性值，输入字段拥有很多种形式。输入字段可以是文本字段、复选框、掩码后的文本控件、单选按钮、按钮等等。<br>
常用属性：<br>
type 规定input元素的类型<br>
value 规定元素的初始值<br>
placeholder 规定帮助用户填写输入字段的提示<br>
checked 规定元素是否为 选中状态<br>
multiple 规定输入字段最多可以选择几个值<br>
name 定义input元素的名称<br>
readonly  规定输入字段为只读<br>
text 文本域<br>
password  密码框<br>
button 以按钮的形式显示<br>
checkbox 复选框的形式显示<br>
radio  单选框<br>
file 传递文件<br>
hidden 隐藏文本域<br>
reset 重置按钮<br>
submit 提交按钮<br>
<strong>label标签</strong><br>
&lt; label&gt;标签不会向用户呈现任何效果。不过，它为鼠标用户改进了可用性。如果在label元素内点击 文本，就会触发此控件标签的for属性应当与相关元素的id属性相同<br>
&lt; input id=&quot;conn&quot; type=&quot;text&quot;&gt;<br>
&lt; label for=&quot;conn&quot;&gt;关联表单元素&lt; /label&gt;<br>
<strong>select标签</strong><br>
select元素可创建单选或多选菜单<br>
select元素中的&lt; option&gt;标签用于定义列表中的可用选项<br>
属性：<br>
autofocus 规定在页面加载后文本区域自动获得焦点<br>
disabled 规定禁用该下拉列表<br>
form  （值：form_id）规定文本区域所属的一个或多个表单<br>
multiple  规定可选择多个选项<br>
name  规定下拉列表的名称<br>
required 规定文本区域是必填的<br>
size（值：number） 规定下拉列表中可见选项的数目<br>
<strong>textarea标签</strong><br>
&lt; textrea&gt;标签定义多行的文本输入控件<br>
属性：autofocus disabled form name required readonly<br>
cols(值:number) 规定文本区内的可见宽度<br>
rows(值:number) 规定文本区内的可见行数<br>
maxlength (值:number) 规定文本区域的最大字符数<br>
placeholder 规定描述文本区域预期值的简短提示<br>
wrap(值:hard soft)规定当在表单中提交时，文本区域中的文本如何换行<br>
<strong>表格</strong><br>
表格由&lt; table&gt;标签来定义<br>
每个表格均有若干行(tr)，每行被分为若干单元格(td)<br>
表格的表头使用&lt; th&gt;标签定义<br>
<em>属性</em>：<br>
border：单元格边框<br>
cellpadding：单元格边距<br>
cellspacing：单元格间距<br>
align：表格显示方式<br>
width：表格宽度<br>
<strong>表格标签</strong><br>
&lt; thead&gt;定义表格的表头。用于组合HTML表格的表头内容<br>
&lt; thead&gt;定义表格主体。用于组合HTML表格主体内容<br>
&lt; tfoot&gt;定义表格的页脚。用于组合HTML表格的表注内容<br>
tfoot元素应该与thead和tbody元素结合起来使用<br>
&lt; tr&gt;标签定义表格中的行。tr元素包含一个或多个th或td元素。<br>
&lt; td&gt;定义HTML表格的标准单元格<br>
HTML表格有两类单元格：<br>
表头单元-包含头部信息（由th元素创建）<br>
标准单元-包含数据（由td元素创建）<br>
td元素中的文本一般显示为正常字体且左对齐<br>
打通单元格<br>
&lt; td rowspan=&quot;2&quot;&gt;&lt; /td&gt;打通行<br>
&lt; td colspan=&quot;2&quot;&gt;&lt; /td&gt;打通列</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML基础]]></title>
        <id>https://Charon0327.github.io/post/html-ji-chu/</id>
        <link href="https://Charon0327.github.io/post/html-ji-chu/">
        </link>
        <updated>2021-01-25T04:31:08.000Z</updated>
        <content type="html"><![CDATA[<p><strong>HTML基本结构</strong><br>
&lt;!doctype html&gt;文档声明，此类为H5文档声明<br>
&lt; meta&gt;包含了页面的隐式信息<br>
某些元素具有空内容，空元素在开始标签内进行关闭。<br>
<strong>HTML属性</strong><br>
属性总是在HTML元素的开始标签中设置<br>
属性总是以名称/值对的形式出现<br>
始终属性值加引号<br>
常用属性：id class title  style href src align<br>
<strong>文本标签</strong><br>
h1-h6标签可定义标题。h1最大，h6最小<br>
p标签定义段落<br>
b标签规定粗体文本<br>
u标签为文本添加下划线<br>
s标签克定义加删除线文本定义<br>
br可插入一个简单的换行符<br>
hr&gt;标签在HTML页面中创建一条水平线<br>
i标签规定斜体文本<br>
<strong>列表标签</strong><br>
ol定义有序列表，常用属性：start规定列表起始位置<br>
ul定义无序列表<br>
li定义列表项目<br>
dl定义了定义列表，用于结合<dt><br>
dt定义了定义列表中的项目<br>
dd在定义列表中定义条目的定义部分<br>
<strong>快捷方式</strong><br>
ol&gt;li{列表$}*4<br>
<strong>超级链接</strong><br>
a来设置超文本链接<br>
鼠标移动到链接上，鼠标默认会变为一只小手，链接文本默认带有下划线<br>
herf属性指定跳转地址 href=&quot;&quot;<br>
target属性固打开方式 target='_blank'（新窗口下打开）<br>
支持相对路径与绝对路径的跳转<br>
<strong>链接跳转</strong><br>
相对路径：相对于当前文档路径进行跳转<br>
绝对路径：从盘符开始的路径<br>
往上一级查找方式../文件夹/文件名<br>
同级查找方式：文件夹/文件名<br>
本地锚点跳转：&lt; a href=&quot;#id值&quot;&gt; &lt; p id=&quot;值&quot;&gt;&lt; /p&gt;<br>
<strong>图片标签</strong><br>
&lt; img src=&quot;地址&quot;&gt; 通过此标签，可向页面内引入图片<br>
src属性为文件的路径，alt属性为图片由于某种原因无法展示的时候显示的信息</p>
]]></content>
    </entry>
</feed>